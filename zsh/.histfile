cd ~/.config/
fgco
cd zsh/zfunc
ls -alt
ls --color
ls -altc
fgl
ls -@
man ls
chmod -x ut
ls -lAGhp
zsh -t
rm -rf .zi
compaudit
cd tmux
rm -rf add-ins
zsh -x
export PATH=~/.config/scripts:$PATH
ut
ut --help
mv ~/.config/scripts/ut.sh ~/.config/scripts/ut
which ut
ut tls cert dump-cert-chain www.google.com 443
ut tls cert dump-cert-chain --rich www.google.com 443
mv ut_install.sh ut_install.sh
mv ut_install.sh ut_install
chmod 705 ut*
chmod 755 ut*
git add scripts
git add zsh/completions/
\:
git restore ubertool/__pycache__
git restore --staged ubertool/__pycache__
git restore --staged ubertool/tls/__pycache__
git restore --staged ubertool/tls/cert/__pycache__
git restore --staged ubertool/common/__pycache__
git commit -m "ubertool"
echo $fpath
pwh
git commit -m "updated ignore"
git push
cd completions
cd zi
cd .zi
cd bin
cd ../../
find . -name _zi
rm scripts.zsh
mkdir zfunc
dircs
cd zfunc
mv -r ~/.config/scripts/ .
mv -R ~/.config/scripts/ .
mv ~/.config/scripts/* .
ls -la
tree
touch functions.zsh
cd ../ls
rm -r scripts
env
mv ~/.zfunc/_ut ~/.config/zsh/completions
man read
openssl s_client -serial -servername github.com -connect github.com:443 2>/dev/null
openssl s_client -noout -serial -servername github.com -connect github.com:443 2>/dev/null
openssl s_client -noout -serial -servername github.com -connect github.com:443
openssl s_client -servername github.com -connect github.com:443 2>/dev/null
openssl s_client -servername github.com -showcerts -connect github.com:443 > ssl.txt
cat ssl.txt
openssl s_client -servername github.com -showcerts -connect github.com:443 2>/dev/null > ssl.txt
cat ssl.txt| grep -A 1 "BEGIN CERTIFICATE"
cat ssl.txt| grep -A 2 "BEGIN CERTIFICATE"
cat ssl.txt| grep -A  "BEGIN CERTIFICATE"
cat ssl.txt| grep "BEGIN CERTIFICATE"
man grep
man openssl
which python3
which env
python3 -c "import OpenSSL"
python3.11 -m pip install --upgrade pip
pip3 install pyopoenssl
pip3 install pyOpenSSL
pip install certifi
pip3 install certifi
./test.zsh
export SSL_CERT_FILE=/etc/ssl/cert.pem
cat $SSL_CERT_FILE
pip3 install cryptography
pip3 install urllib3
openssl s_client -servername github.com -showcerts -connect github.com:443
openssl s_client -servername github.com -serial -connect github.com:443
openssl s_client -servername github.com -connect github.com:443
openssl s_client -servername github.com -connect github.com:443 2>/dev/null | openssl 
pip install pyyaml
pip3 install pyyaml
./test.py
cd ~/.config/scripts
python3 main.py
python3 main.py tls
cat */**
cd tls/cert
cat *
cat commands.py
python3 main.py tls --help
python3 main.py tls "github.com" 442
python3 main.py tls cert dump-cert-chain "github.com" 442
python3 main.py tls cert dump-cert-chain github.com 442
python3 main.py tls cert dump-cert-chain --rich=True github.com 443
python3 main.py tls cert dump-cert-chain github.com 443
python3 main.py tls cert dump-cert-chain --rich github.com 443
typer 
pip3 uninstall typer
pip3 install typer
~/.config/scripts
pip3 -m venv .venv
pip3 m venv .venv
python3 -m venv .venv
source .venv/bin/activate
pip3 install -r requirements.txt
.venv/
pip install typer-cli
ln
cd uber-tool
typer main.py 
typer main
move uber-tool ut
mv uber-tool ut/
typer ut.main
cd ut
mv main.py __main__.py
touch __init__.py
mv ut ubertool
typer ubertool
typer ubertool.main
cd ubertool
typer run ubertool
typer run .
typer . run
typer ubertool run
python3 -m ubertool -v
python3 -m ubertool
typer -m ubertool tls
typer ubertool tls
typer ./ubertool tls
python3 -m ubertool 
python3 -m ubertool tls
man python3
python3 -m ubertool -h
python3 -m ubertool --help
python3 -m ubertool tls cert
python3 -m ubertool --show-completion
python3 -m ubertool tls cert dump-cert-chain
python3 -m ubertool tls cert dump-cert-chain github.com 443
mv tool.sh ut.sh
python3 -m ubertool tls cert dump-cert-chain --rich github.com 443
.venv/bin/deactivate 
deactivate 
chmod 700 ut.sh
./ut.sh
ls ls -al
rm -rf .venv
touch ut_install.sh
chmod 700 ut_install.sh
./ut_install.sh
./ut.sh 
./ut.sh tls cert --help
./ut.sh tls cert dump-cert-chain --help
./ut.sh --help
cd ~/.zfunc
cat _UberTool
dirs
pop
popd
cat 
cat /Users/ray/.zfunc/_ubertool
zstyle 
zstyle ':completion:*' verbose yes
./ut.sh --install-completion zsh
nvim .zshrc
zshrc
mv test.zsh test.py
nvim test.py
mv test.py ~/.config/scripts
at
mv scripts tool.sh
mkdir scripts
mv tool.sh scripts
cd scripts
mkdir tool
mv tool.sh tool/main.py
touch tool.sh
cd tool
touch requirements.txt
python3 --version
nvim requirements.txt
cd tls
mkdir cert
mv cert.py cert
cd cert
touch commands.py
cd ../..
cat commands_loader.py
rm commands_loader.py
zsh
cd nvim/
nvim
cd nvim
nvim .
cd zsh
cat .zcompdump
nvim .zcompdump
cd ..
touch .gitconfig
nvim .gitconfig
git remote 
git remote -v
mv ..
mv ../.gitconfig ../.gitignore
cd ../
cd ~/.config
mv .gitconfig .gitignore 
ls -al
git add .gitignore
git add .gitconfig
git add zsh
git restore --staged zsh/.zi
git add .gitignore 
git restore zsh/.zcompdump
git restore --staged zsh/.zcompdump
git commit -m "more stuff"
git config --global --edit
git commit --amend --reset-author
rm 
rm -rf .git
git init
git remote add origin git@github.com:raypendergraph/dotfiles.git
git branch -M master
git commit -m "initial"
rm zsh/.zsh_history
nvim .gitignore
git add .
git commit -m "removed history"
ssh-add ~/.ssh/github
git push -u origin master
p;
l
ll
ls
pwd
git status
git checkout -b abcbs
git push 
git push --set-upstream origin abcbs
cd
vim test.zsh
nvim test.zsh
chmod 700 test.zsh
./test.zsh github.com:443
tmux
exit
compaudit
zsh
compinit
compinstall
autoload -U compinstall
compinstall
ls
nvim .
